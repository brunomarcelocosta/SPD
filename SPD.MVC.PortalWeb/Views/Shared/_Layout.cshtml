@using SPD.MVC.PortalWeb.Content.Texts
@using SPD.MVC.Geral.Controllers
@using SPD.MVC.Geral.Global
@using SPD.MVC.Geral.Utilities

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta Http-Equiv="Cache-Control" Content="no-cache">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@GlobalResource.ApplicationTitle - @ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/multileveldropdown")

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/sweetalert")
    @Scripts.Render("~/bundles/site")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/signalr")

    @RenderSection("scripts", required: false)
    <script>
            function getAuthentication() {
                @{
                    var securityController = ViewContext.Controller as SecurityController;

                    var authenticationFromSession = Json.Encode(securityController.GetAuthenticationFromSession());

                    var securityToken = StringCipher.Encrypt(authenticationFromSession, GlobalConstants.Security.SessionCipher);
                }
                return '@securityToken';
            }
    </script>
</head>
<body>
    <div class="body-top">
        @Html.Partial("Menu")
    </div>
    <div class="container body-content">
        <div id="notifications"></div>
        @RenderBody()
        <hr />
        @Html.Action(GlobalConstants.Login.AuthenticationStatusAction)
    </div>
</body>
</html>
